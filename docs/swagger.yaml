basePath: /api
definitions:
  cityClient.CityData:
    properties:
      country:
        type: string
      id:
        type: string
      lat:
        type: number
      lon:
        type: number
      name:
        type: string
    type: object
  user.CreateUserDTO:
    properties:
      email:
        type: string
      password:
        type: string
      repeat_password:
        type: string
    type: object
  user.UpdateUserDTO:
    properties:
      email:
        type: string
      new_password:
        type: string
      old_password:
        type: string
      password:
        type: string
      uuid:
        type: string
    type: object
  user.User:
    properties:
      email:
        type: string
      uuid:
        type: string
    type: object
  user.UserFavouriteCityDTO:
    properties:
      city_id:
        type: string
      email:
        type: string
      password:
        type: string
      uuid:
        type: string
    type: object
  weatherClient.BriefWeatherCity:
    properties:
      avg_temp:
        type: number
      country:
        type: string
      date_time_array:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
host: localhost:8090
info:
  contact: {}
  description: API Server for Weather Application, parsing http://api.openweathermap.org
  title: Weather App Api
  version: "1.0"
paths:
  /cities:
    get:
      consumes:
      - application/json
      description: get cities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/cityClient.CityData'
              type: array
            type: array
      summary: Available cities list
      tags:
      - Weather
  /cities/{city}:
    get:
      consumes:
      - application/json
      description: Get brief weather info for city
      parameters:
      - description: weather info for city
        in: path
        name: city
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/weatherClient.BriefWeatherCity'
            type: array
      summary: City brief weather info and dates with more details
      tags:
      - Weather
  /cities/{city}/{date}:
    get:
      consumes:
      - application/json
      description: Get city detailed weather by date
      parameters:
      - description: weather info for city
        in: path
        name: city
        required: true
        type: string
      - description: date expected 2006-01-02 15:04:05 or 2006-01-02T15:04:05Z format
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: City detail weather info for date
      tags:
      - Weather
  /userfavs:
    get:
      consumes:
      - application/json
      description: Get user favourite cities by email and password
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      - description: User password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/cityClient.CityData'
              type: array
            type: array
      summary: Get user favourite cities
      tags:
      - Users Favourite Cities
  /userfavs/{uid}:
    post:
      consumes:
      - application/json
      description: Create new user favourite city by email and password
      parameters:
      - description: User uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: User with city
        in: body
        name: crUser
        required: true
        schema:
          $ref: '#/definitions/user.UserFavouriteCityDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/cityClient.CityData'
              type: array
            type: array
      summary: Create new user favourite city
      tags:
      - Users Favourite Cities
  /userfavs/{uuid}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: User and city
        in: body
        name: crUser
        required: true
        schema:
          $ref: '#/definitions/user.UserFavouriteCityDTO'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete city from user favourites
      tags:
      - Users Favourite Cities
  /users:
    get:
      consumes:
      - application/json
      description: Get user by email and password
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      - description: User password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      summary: Get user by email and password
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create new user by email and password
      parameters:
      - description: New user
        in: body
        name: crUser
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/cityClient.CityData'
              type: array
            type: array
      summary: Create new user
      tags:
      - Users
  /users/{uuid}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete user by uuid param
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user by uuid
      parameters:
      - description: User uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      summary: Get user by uuid
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Updated user
        in: body
        name: crUser
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserDTO'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Partially user update
      tags:
      - Users
swagger: "2.0"
